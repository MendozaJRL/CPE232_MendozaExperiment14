
# Tasks to Install Nova for Ubuntu

- name: Install Nova for Ubuntu
  apt:
    name:
      - nova-api
      - nova-conductor
      - nova-novncproxy
      - nova-scheduler
    state: latest
  become: true
  when: ansible_distribution == "Ubuntu"

# Tasks to Install Nova for CentOS

- name: Install Nova for CentOS
  apt:
    name:
      - openstack-nova-api
      - openstack-nova-conductor
      - openstack-nova-novncproxy
      - openstack-nova-scheduler
    state: latest
  become: true
  when: ansible_distribution == "CentOS"

# Tasks to Configure the Nova Service

- name: Configure Default Password of the Nova API
  lineinfile:
    dest: /etc/nova/nova.conf
    regexp: connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api
    line: connection = mysql+pymysql://nova:admin123@controller/nova_api
    backup: yes
    backrefs: yes
  when: ansible_distribution == "Ubuntu"

- name: Configure auth_strategy of the Nova service
  lineinfile:
    dest: /etc/nova/nova.conf
    insertafter: '\[api\]'
    line: 'auth_strategy = keystone'
    state: present
    backup: yes
  when: ansible_distribution == "Ubuntu"

- name: Configure Default Password of the Nova Database
  lineinfile:
    dest: /etc/nova/nova.conf
    regexp: mysql+pymysql://nova:NOVA_DBPASS@controller/nova
    line: mysql+pymysql://nova:admin123@controller/nova
    backup: yes
    backrefs: yes
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Authentication Token
  lineinfile:
    dest: /etc/glance/glance-api.conf
    insertafter: '\[keystone_authtoken\]'
    line: "{{ item }}"
    state: present
    backup: yes
  with_items:
    - www_authenticate_uri = http://controller:5000/
    - auth_url = http://controller:5000/
    - memcached_servers = controller:11211
    - auth_type = password
    - project_domain_name = Default
    - user_domain_name = Default
    - project_name = service
    - username = nova
    - password = tipqc
  when: ansible_distribution == "Ubuntu"

- name: Configure vnc of the Nova Service
  lineinfile:
    dest: /etc/glance/glance-api.conf
    insertafter: '\[vnc\]'
    line: "{{ item }}"
    state: present
    backup: yes

  with_items:
    - enabled = true
    - server_listen = $my_ip
    - server_proxyclient_address = $my_ip
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova placement
  lineinfile:
    dest: /etc/glance/glance-api.conf
    insertafter: '\[placement\]'
    line: "{{ item }}"
    state: present
    backup: yes

  with_items:
    - region_name = RegionOne
    - project_domain_name = Default
    - project_name = service
    - auth_type = password
    - user_domain_name = Default
    - auth_url = http://controller:5000/v3
    - username = placement
    - password = admin123
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Default ip address
  lineinfile:
    dest: /etc/nova/nova.conf
    line: 'my_ip = 10.0.2.15'
    state: present
    backup: yes
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Glance api_server
  lineinfile:
    dest: /etc/nova/nova.conf
    line: 'api_server = http://controller:9292'
    state: present
    backup: yes
  when: ansible_distribution == "Ubuntu"

- name: Modify Configuration on lock_path
  lineinfile:
    dest: /etc/nova/nova.conf
    line: 'lock_path = /var/lib/nova/tmp'
    state: present
    backup: yes
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Database
  shell: sudo nova-manage api_db sync
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Database
  shell: sudo nova-manage cell_v2 map_cell0
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Database
  shell: sudo nova-manage db sync
  when: ansible_distribution == "Ubuntu"

- name: Configure Nova Database
  shell: sudo nova-manage cell_v2 list_cells
  when: ansible_distribution == "Ubuntu"
